name: Test Rattler Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  build-base:
    runs-on: ubuntu-latest
    steps:
      # ~~~~~ rattler build local conda channel ~~~~~
      - uses: actions/checkout@v4
      - name: Setup micromamba env for rattler build
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: rattler
          init-shell: bash
      - name: Install rattler-build
        shell: bash -leo pipefail {0}
        run: |
          micromamba install -c conda-forge rattler-build --yes
      - name: Build local conda channel (i.e. rattler-build artifacts)
        shell: bash -leo pipefail {0}
        run: |
          chmod +x .rattler-build/build.sh
          ./.rattler-build/build.sh

      # ~~~~~~~~~~ build testable base container ~~~~~~~~~~
      # xref https://docs.docker.com/build/ci/github-actions/share-image-jobs/
      # build locally with: `docker buildx build -t $TAG --target=testable_runtime -f Dockerfile .`
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export testable container
        uses: docker/build-push-action@v6
        with:
          context: .  # path context to get results of rattler-build mutations in build context
          tags: test-image:latest
          outputs: type=docker,dest=/tmp/test-image.tar
          target: testable_runtime
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-image
          path: /tmp/test-image.tar

  local-e2e-test:
    runs-on: ubuntu-latest
    needs: build-base
    steps:
      # ~~~~~~~~~~ download & load artifact ~~~~~~~~~~
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: test-image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/test-image.tar && docker image ls -a

      # ~~~~~~~~~~ run local e2e tests ~~~~~~~~~~~~~~~
      - uses: actions/checkout@v4
      - name: Test worker container - sequential end-to-end
        shell: bash -leo pipefail {0}
        run: |
          docker run \
          -v `pwd`/tests:/opt/tests \
          -v `pwd`/examples:/opt/examples \
          test-image /env/bin/python -m pytest -v /opt/tests/test_examples.py \
          -k "end_to_end and sequential"

      - name: Test worker container - async end-to-end
        shell: bash -leo pipefail {0}
        run: |
          docker run \
          -v `pwd`/tests:/opt/tests \
          -v `pwd`/examples:/opt/examples \
          test-image /env/bin/python -m pytest -v /opt/tests/test_examples.py \
          -k "end_to_end and async"

  # test-cloud-run:
  #   runs-on: ubuntu-latest
  #   needs: build-base
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: test-image
  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/test-image.tar
  #         docker image ls -a

  #     - name: Lithops build + push
