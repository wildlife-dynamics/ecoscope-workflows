name: Test Rattler Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: rattler
          init-shell: bash

      - name: Install build deps
        shell: bash -leo pipefail {0}
        run: |
          micromamba install -c conda-forge rattler-build PyYAML "python>=3.10" --yes

      - name: Build psmem
        shell: bash -leo pipefail {0}
        working-directory: deploy
        run: |
          rattler-build build --recipe rattler/ps-mem.yaml

      - name: Build lithops
        shell: bash -leo pipefail {0}
        working-directory: deploy
        run: |
          rattler-build build --recipe rattler/lithops.yaml

      - name: Build earthranger-client
        shell: bash -leo pipefail {0}
        working-directory: deploy
        run: |
          rattler-build build --recipe rattler/earthranger-client.yaml

      - name: Build lonboard
        shell: bash -leo pipefail {0}
        working-directory: deploy
        run: |
          rattler-build build --recipe rattler/lonboard.yaml

      - name: Build ecoscope-core
        shell: bash -leo pipefail {0}
        working-directory: deploy
        run: |
          rattler-build build --recipe rattler/ecoscope-core.yaml

      - name: Get correct COMMIT_SHA (regardless of event type)
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          else
            echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Export ECOSCOPE_WORKFLOWS_REV and tmp paths to env
        run: |
          echo "ECOSCOPE_WORKFLOWS_REV=${COMMIT_SHA}" >> $GITHUB_ENV
          echo "TMP_RATTLER_RECIPE=`pwd`/tmp/${COMMIT_SHA}.yaml" >> $GITHUB_ENV
          echo "TMP_ENVFILE=`pwd`/tmp/environment.yml" >> $GITHUB_ENV

      - name: Build ecoscope-workflows
        shell: bash -leo pipefail {0}
        working-directory: deploy
        # This command sets the version of ecoscope-workflows to the commit hash of
        # the current branch and then builds the conda package based on that version.
        run: |
          python scripts/set_context_version.py `pwd`/rattler/ecoscope-workflows.yaml $TMP_RATTLER_RECIPE $ECOSCOPE_WORKFLOWS_REV
          rattler-build build --recipe $TMP_RATTLER_RECIPE

      - name: Build worker container
        shell: bash -leo pipefail {0}
        working-directory: deploy
        # Now before we build the worker container, we need to reset the rev specifier for ecoscope-workflows
        # in environment.yml to the commit hash of the current branch, to match the version of the conda package
        # we just built in the previous step.
        run: |
          python scripts/set_envyaml_workflows_specifier.py `pwd`/environment.yml $TMP_ENVFILE $ECOSCOPE_WORKFLOWS_REV
          docker buildx build -t rattler-image -f Dockerfile.base --build-arg ENVFILE=$TMP_ENVFILE .

      - name: Test worker container
        shell: bash -leo pipefail {0}
        run: |
          docker run \
          -v `pwd`/tests:/opt/tests \
          -v `pwd`/examples:/opt/examples \
          -e EARTHRANGER_SERVER=${{ secrets.EARTHRANGER_SERVER }} \
          -e EARTHRANGER_USERNAME=${{ secrets.EARTHRANGER_USERNAME }} \
          -e EARTHRANGER_PASSWORD=${{ secrets.EARTHRANGER_PASSWORD }} \
          rattler-image /bin/bash -c "\
          micromamba -n lithops-worker install -c conda-forge pytest --yes \
          && micromamba -n lithops-worker run pytest /opt/tests"
