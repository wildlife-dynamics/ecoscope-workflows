name: Test Rattler Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Setup Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: rattler
          init-shell: bash

      - name: Install build deps
        shell: bash -leo pipefail {0}
        run: |
          micromamba install -c conda-forge rattler-build --yes

      - name: Set short commit sha on env (this will be the container tag)
        # note conditional logic to get the commit sha regardless of event type
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            export COMMIT_SHA=${{ github.event.pull_request.head.sha }}
          else
            export COMMIT_SHA=${{ github.sha }}
          fi
          echo "SHORT_COMMIT_SHA=$(echo $COMMIT_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build local conda channel (i.e. rattler-build artifacts)
        shell: bash -leo pipefail {0}
        run: |
          chmod +x .rattler-build/build.sh
          ./.rattler-build/build.sh

      - name: Build testable container
        run: |
          docker buildx build -t $SHORT_COMMIT_SHA --target=testable_runtime -f Dockerfile .

      - name: Test worker container - sequential end-to-end
        shell: bash -leo pipefail {0}
        run: |
          docker run \
          -v `pwd`/tests:/opt/tests \
          -v `pwd`/examples:/opt/examples \
          $SHORT_COMMIT_SHA /env/bin/python -m pytest -v /opt/tests/test_examples.py \
          -k "end_to_end and sequential"

      - name: Test worker container - async end-to-end
        shell: bash -leo pipefail {0}
        run: |
          docker run \
          -v `pwd`/tests:/opt/tests \
          -v `pwd`/examples:/opt/examples \
          $SHORT_COMMIT_SHA /env/bin/python -m pytest -v /opt/tests/test_examples.py \
          -k "end_to_end and async"
