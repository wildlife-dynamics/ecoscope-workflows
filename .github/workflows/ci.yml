name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]
    types: [ opened, reopened, synchronize, labeled ]

jobs:
  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        namespace: ["core", "ext-ecoscope"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Mypy
        run: pixi run --manifest-path pixi.toml mypy-${{ matrix.namespace }}-all

  doctest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        namespace: ["core"]  #, "ext-ecoscope"]  # todo: enable once ext-ecoscope has doctests
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: pixi run --manifest-path pixi.toml doctest-${{ matrix.namespace }}-all

  test-core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: pixi run --manifest-path pixi.toml pytest-core-${{ matrix.python-version }}

  test-ext-ecoscope-not-io:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: pixi run --manifest-path pixi.toml pytest-ext-ecoscope-${{ matrix.python-version }}-not-io

  test-ext-ecoscope-io:
    # run if:
    #  - all pushes to main
    #  - a PR was just labeled 'test-io'
    #  - a PR with labeled 'test-io' label was opened, reopened, or synchronized
    if: |
      github.event_name == 'push' ||
      github.event_name == 'schedule' ||
      github.event.label.name == 'test-io' ||
      contains( github.event.pull_request.labels.*.name, 'test-io')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        env:
          EARTHRANGER_SERVER: ${{ secrets.EARTHRANGER_SERVER }}
          EARTHRANGER_USERNAME: ${{ secrets.EARTHRANGER_USERNAME }}
          EARTHRANGER_PASSWORD: ${{ secrets.EARTHRANGER_PASSWORD }}
        run: pixi run --manifest-path pixi.toml pytest-ext-ecoscope-${{ matrix.python-version }}-io
