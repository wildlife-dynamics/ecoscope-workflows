name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  mypy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Mypy
        run: |
          pixi run --locked --environment mypy-py${{ matrix.python-version }} mypy

  doctest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: |
          pixi run --locked --environment test-all-py${{ matrix.python-version }} \
          pytest -v ecoscope_workflows/ --doctest-modules --ignore=ecoscope_workflows/visualize.py

  test-core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: |  # todo: move end-to-end tests to examples build dirs and remove `-k` flag
          pixi run --locked --environment test-all-py${{ matrix.python-version }} \
          pytest -v tests --ignore tests/tasks -k "not test_end_to_end"

  test-tasks-not-io:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: pixi run --locked --environment test-all-py${{ matrix.python-version }} pytest -v tests/tasks -m "not io"

  test-tasks-io:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["310", "311", "312"]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        env:
          EARTHRANGER_SERVER: ${{ secrets.EARTHRANGER_SERVER }}
          EARTHRANGER_USERNAME: ${{ secrets.EARTHRANGER_USERNAME }}
          EARTHRANGER_PASSWORD: ${{ secrets.EARTHRANGER_PASSWORD }}
        run: pixi run --locked --environment test-all-py${{ matrix.python-version }} pytest -v tests/tasks -m "io"

  test-e2e:  # todo: move end-to-end tests to examples build dirs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["312"]
        execution-mode: ["sequential", "async"]
        compilation-spec: [
          "mode-map",
          "mode-mapvalues",
          "patrol_events",
          "patrol_workflow",
          "subject_tracking",
        ]
    steps:
      - uses: actions/checkout@v4
      - name: Install pixi
        run: curl -fsSL https://pixi.sh/install.sh | bash && echo "$HOME/.pixi/bin" >> $GITHUB_PATH
      - name: Test
        run: |
          pixi run --locked --environment test-all-py${{ matrix.python-version }} \
          pytest -v tests/test_examples.py \
          -k "end_to_end and ${{ matrix.execution-mode }} and ${{ matrix.compilation-spec }}"
