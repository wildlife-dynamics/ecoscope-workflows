id: mapvalues_example
workflow:
  # ----------------------------------------------------------------------
  # Mapping over a groups split from a single data source, which are keyed
  # ----------------------------------------------------------------------
  # Step 1 - Fetching a single data source
  - name: Get Observations
    id: obs
    task: get_subjectgroup_observations
  # Step 2 - Setting the groupers
  - name: Set Groupers
    id: groupers
    task: set_groupers
  # Step 3 - Splitting the data source into groups
  - name: Split Observations
    id: split_obs
    task: split_groups
    with:
      df: ${{ workflow.obs.return }}
      groupers: ${{ workflow.groupers.return }}
  # Step 4 - Mapping over the groups
  - name: Create EcoMap For Each Group
    id: ecomaps
    task: draw_ecomap
    mode: mapvalues
    iter:
      # As part of mode: mapvalues, I'm not quite sure if it may be useful to instroduce the
      # `[*][N]` syntax to access the values of the iterable. The idea here is to allow users
      # to more easily see what they are iterating over in the context of `mapvalues`, but I'm
      # not yet sure if it's necessary. (If so, we should add `[*]`, or whatever the "each" syntax is,
      # to the arg dependencies for `iter`s associated with `mode=map`, if a single iterable value is given,
      # but not if an array of single values is given.)
      geodataframe: ${{ workflow.split_obs.return }}  # or ...return[*][1]
  # Step 5 - Persisting the EcoMaps
  - name: Persist EcoMaps
    id: ecomaps_persist
    task: persist_text
    mode: mapvalues
    iter:
      text: ${{ workflow.ecomaps.return }}
    with:
      root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
  # # Step 6 - Creating Widgets for Each EcoMap
  # - name: Create EcoMap Widgets
  #   id: ecomap_widgets
  #   task: create_map_widget_single_view
  #   mode: mapvalues
  #   iter:
  #     data: ${{ workflow.ecomaps_persist.return }}
