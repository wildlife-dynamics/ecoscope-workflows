id: map_example
workflow:
  - type: task-group
    title: Data Sources
    description: >-
      Fetching observations from three independent data sources.
    tasks:
      - name: Get Observations A
        id: obs_a
        task: get_subjectgroup_observations
      - name: Get Observations B
        id: obs_b
        task: get_subjectgroup_observations
      - name: Get Observations C
        id: obs_c
        task: get_subjectgroup_observations
  - type: task-group
    title: Create maps
    description: >-
      Create maps for each group.
    tasks:
      # Mapping over the three data sources
      - name: Create Map Layer For Each Group
        id: map_layers
        task: create_map_layer
        map:
          argnames: geodataframe
          argvalues:
            - ${{ workflow.obs_a.return }}
            - ${{ workflow.obs_b.return }}
            - ${{ workflow.obs_c.return }}
      # Chained map over the iterable returned by the previous step
      - name: Create EcoMap For Each Group
        id: ecomaps
        task: draw_ecomap
        map:
          argnames: geo_layers
          argvalues: ${{ workflow.map_layers.return }}
      # Persisting the EcoMaps as text
      - name: Persist Ecomaps as Text
        id: td_ecomap_html_url
        task: persist_text
        partial:
          root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
        map:
          argnames: "text"
          argvalues: ${{ workflow.ecomaps.return }}
