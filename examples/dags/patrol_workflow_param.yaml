get_patrol_observations:
  client: "mep_dev" # (<class 'ecoscope_workflows.connections.EarthRangerClientProtocol'>, BeforeValidator(func=<bound method DataConnection.client_from_named_connection of <class 'ecoscope_workflows.connections.EarthRangerConnection'>>), WithJsonSchema(json_schema={'type': 'string', 'description': 'A named EarthRanger connection.'}, mode=None))
  since: "2011-01-01" # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='Start date'))
  until: "2023-01-01" # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='End date'))
  patrol_type: "0ef3bf48-b44c-4a4e-a145-7ab2e38c9a57" # (<class 'str'>, FieldInfo(annotation=NoneType, required=False, default=None, description='Comma-separated list of type of patrol UUID'))
  include_patrol_details: True # (<class 'bool'>, FieldInfo(annotation=NoneType, required=False, default=False, description='Include patrol details'))
process_relocations:
  filter_point_coords: [[180, 90], [0, 0]] # (list[list[float]], FieldInfo(annotation=NoneType, required=True))
  relocs_columns: [
      "patrol_id",
      "patrol_start_time",
      "patrol_end_time",
      "patrol_type__display",
      "groupby_col",
      "fixtime",
      "junk_status",
      "extra__source",
      "geometry",
    ] # (list[str], FieldInfo(annotation=NoneType, required=True))
relocations_to_trajectory:
  min_length_meters: 0.001 # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  max_length_meters: 10000 # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  max_time_secs: 3600 # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  min_time_secs: 1 # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  max_speed_kmhr: 120 # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  min_speed_kmhr: 0.0 # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
calculate_time_density:
  pixel_size: 250.0 # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=250.0, description='Pixel size for raster profile.'))
  crs: "ESRI:102022" # (<class 'str'>, FieldInfo(annotation=NoneType, required=False, default='ESRI:102022'))
  nodata_value: "nan" # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=nan, metadata=[_PydanticGeneralMetadata(allow_inf_nan=True)]))
  band_count: 1 # (<class 'int'>, FieldInfo(annotation=NoneType, required=False, default=1))
  max_speed_factor: 1.05 # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=1.05))
  expansion_factor: 1.3 # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=1.3))
  percentiles: [50.0, 60.0, 70.0, 80.0, 90.0, 95.0] # (list[float], FieldInfo(annotation=NoneType, required=False, default=[50.0, 60.0, 70.0, 80.0, 90.0, 95.0]))
draw_ecomap:
  static: False # (<class 'bool'>, FieldInfo(annotation=NoneType, required=True))
  height: 1000 # (<class 'int'>, FieldInfo(annotation=NoneType, required=True))
  width: 1500 # (<class 'int'>, FieldInfo(annotation=NoneType, required=True))
  search_control: True # (<class 'bool'>, FieldInfo(annotation=NoneType, required=True))
  title: "Great Map" # (<class 'str'>, FieldInfo(annotation=NoneType, required=True))
  title_kws: {} # (<class 'dict'>, FieldInfo(annotation=NoneType, required=True))
  tile_layers: [] # (list[dict], FieldInfo(annotation=NoneType, required=True))
  north_arrow_kws: {} # (<class 'dict'>, FieldInfo(annotation=NoneType, required=True))
  add_gdf_kws: {} # (<class 'dict'>, FieldInfo(annotation=NoneType, required=True))
