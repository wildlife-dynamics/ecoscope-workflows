get_subjectgroup_observations:
  client:   # (<class 'ecoscope_workflows.connections.EarthRangerClientProtocol'>, BeforeValidator(func=<bound method DataConnection.client_from_named_connection of <class 'ecoscope_workflows.connections.EarthRangerConnection'>>), WithJsonSchema(json_schema={'type': 'string', 'description': 'A named EarthRanger connection.'}, mode=None))
  subject_group_name:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=True, description='Name of EarthRanger Subject'))
  include_inactive:   # (<class 'bool'>, FieldInfo(annotation=NoneType, required=True, description='Whether or not to include inactive subjects'))
  since:   # (<class 'datetime.datetime'>, FieldInfo(annotation=NoneType, required=True, description='Start date'))
  until:   # (<class 'datetime.datetime'>, FieldInfo(annotation=NoneType, required=True, description='End date'))
process_relocations:
  filter_point_coords:   # (list[list[float]], FieldInfo(annotation=NoneType, required=True))
  relocs_columns:   # (list[str], FieldInfo(annotation=NoneType, required=True))
relocations_to_trajectory:
  min_length_meters:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  max_length_meters:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  max_time_secs:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  min_time_secs:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  max_speed_kmhr:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
  min_speed_kmhr:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=True))
calculate_time_density:
  pixel_size:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=250.0, description='Pixel size for raster profile.'))
  crs:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=False, default='ESRI:102022'))
  nodata_value:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default='nan', metadata=[_PydanticGeneralMetadata(allow_inf_nan=True)]))
  band_count:   # (<class 'int'>, FieldInfo(annotation=NoneType, required=False, default=1))
  max_speed_factor:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=1.05))
  expansion_factor:   # (<class 'float'>, FieldInfo(annotation=NoneType, required=False, default=1.3))
  percentiles:   # (list[float], FieldInfo(annotation=NoneType, required=False, default=[50.0, 60.0, 70.0, 80.0, 90.0, 95.0]))
draw_ecomap:
  data_type:   # (<class 'bool'>, FieldInfo(annotation=NoneType, required=True))
  style_kws:   # (<class 'dict'>, FieldInfo(annotation=NoneType, required=True))
  tile_layer:   # (str, FieldInfo(annotation=NoneType, required=False))
  static:   # (<class 'bool'>, FieldInfo(annotation=NoneType, required=False))
  title:   # (<class 'str'>, FieldInfo(annotation=NoneType, required=False))
  title_kws:   # (<class 'dict'>, FieldInfo(annotation=NoneType, required=False))
  scale_kws:   # (<class 'dict'>, FieldInfo(annotation=NoneType, required=False))
  north_arrow_kws:   # (<class 'dict'>, FieldInfo(annotation=NoneType, required=False))
