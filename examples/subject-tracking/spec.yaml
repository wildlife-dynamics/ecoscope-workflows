id: subject_tracking
requirements:
  - name: ecoscope-workflows-core
    version: "*"
    channel: file:///tmp/ecoscope-workflows/release/artifacts/
  - name: ecoscope-workflows-ext-ecoscope
    version: "*"
    channel: file:///tmp/ecoscope-workflows/release/artifacts/
workflow:
  # set 'global' groupers
  - name: Set Groupers
    id: groupers
    task: set_groupers

  # subject group observations
  - name: Get Subject Group Observations from EarthRanger
    id: subject_obs
    task: get_subjectgroup_observations
  - name: Transform Observations to Relocations
    id: subject_reloc
    task: process_relocations
    partial:
      observations: ${{ workflow.subject_obs.return }}
  - name: Transform Relocations to Trajectories
    id: subject_traj
    task: relocations_to_trajectory
    partial:
      relocations: ${{ workflow.subject_reloc.return }}
  - name: Add temporal index to Subject Trajectories
    id: traj_add_temporal_index
    task: add_temporal_index
    partial:
      df: ${{ workflow.subject_traj.return }}
  - name: Split Subject Trajectories by Group
    id: split_subject_traj_groups
    task: split_groups
    partial:
      df: ${{ workflow.traj_add_temporal_index.return }}
      groupers: ${{ workflow.groupers.return }}

  # subject group trajectories map
  - name: Create map layer for each trajectory group
    id: traj_map_layers
    task: create_map_layer
    mapvalues:
      argnames: geodataframe
      argvalues: ${{ workflow.split_subject_traj_groups.return }}
  - name: Draw Ecomaps for each trajectory group
    id: traj_ecomap
    task: draw_ecomap
    mapvalues:
      argnames: geo_layers
      argvalues: ${{ workflow.traj_map_layers.return }}
  - name: Persist ecomap as Text
    id: ecomap_html_urls
    task: persist_text
    partial:
      root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
    mapvalues:
      argnames: text
      argvalues: ${{ workflow.traj_ecomap.return }}
  - name: Create Map Widgets for Trajectories
    id: traj_map_widgets_single_views
    task: create_map_widget_single_view
    map:
      argnames: [view, data]
      argvalues: ${{ workflow.ecomap_html_urls.return }}
  - name: Merge EcoMap Widget Views
    id: traj_grouped_map_widget
    task: merge_widget_views
    partial:
      widgets: ${{ workflow.traj_map_widgets_single_views.return }}

  # Grouped single value widget (1) - mean speed per group
  - name: Calculate Mean Speed Per Group
    id: mean_speed
    task: dataframe_column_mean
    mapvalues:
      argnames: df
      argvalues: ${{ workflow.split_subject_traj_groups.return }}
  - name: Create Single Value Widgets for Mean Speed Per Group
    id: mean_speed_sv_widgets
    task: create_single_value_widget_single_view
    map:
      argnames: [view, data]
      argvalues: ${{ workflow.mean_speed.return }}
  - name: Merge per group Mean Speed SV widgets
    id: mean_speed_grouped_sv_widget
    task: merge_widget_views
    partial:
      widgets: ${{ workflow.mean_speed_sv_widgets.return }}

  # Grouped single value widget (2) - max speed per group
  - name: Calculate Max Speed Per Group
    id: max_speed
    task: dataframe_column_max
    mapvalues:
      argnames: df
      argvalues: ${{ workflow.split_subject_traj_groups.return }}
  - name: Create Single Value Widgets for Max Speed Per Group
    id: max_speed_sv_widgets
    task: create_single_value_widget_single_view
    map:
      argnames: [view, data]
      argvalues: ${{ workflow.max_speed.return }}
  - name: Merge per group Max Speed SV widgets
    id: max_speed_grouped_sv_widget
    task: merge_widget_views
    partial:
      widgets: ${{ workflow.max_speed_sv_widgets.return }}

  # Grouped single value widget (3) - number of locations per group
  - name: Calculate Number of Locations Per Group
    id: num_location
    task: dataframe_count
    mapvalues:
      argnames: df
      argvalues: ${{ workflow.split_subject_traj_groups.return }}
  - name: Create Single Value Widgets for Number of Location Per Group
    id: num_location_sv_widgets
    task: create_single_value_widget_single_view
    map:
      argnames: [view, data]
      argvalues: ${{ workflow.num_location.return }}
  - name: Merge per group Number of Locations SV widgets
    id: num_location_grouped_sv_widget
    task: merge_widget_views
    partial:
      widgets: ${{ workflow.num_location_sv_widgets.return }}

  # Grouped single value widget (4) - daynight ratio
  - name: Calculate Day/Night Ratio Per Group
    id: daynight_ratio
    task: get_day_night_ratio
    mapvalues:
      argnames: df
      argvalues: ${{ workflow.split_subject_traj_groups.return }}
  - name: Create Single Value Widgets for Day/Night Ratio Per Group
    id: daynight_ratio_sv_widgets
    task: create_single_value_widget_single_view
    map:
      argnames: [view, data]
      argvalues: ${{ workflow.daynight_ratio.return }}
  - name: Merge per group Day/Night Ratio SV widgets
    id: daynight_ratio_grouped_sv_widget
    task: merge_widget_views
    partial:
      widgets: ${{ workflow.daynight_ratio_sv_widgets.return }}

  # time density
  - name: Calculate Time Density from Trajectory
    id: td
    task: calculate_time_density
    mapvalues:
      argnames: trajectory_gdf
      argvalues: ${{ workflow.split_subject_traj_groups.return }}
  - name: Create map layer from Time Density
    id: td_map_layer
    task: create_map_layer
    mapvalues:
      argnames: geodataframe
      argvalues: ${{ workflow.td.return }}
  - name: Draw Ecomap from Time Density
    id: td_ecomap
    task: draw_ecomap
    mapvalues:
      argnames: geo_layers
      argvalues: ${{ workflow.td_map_layer.return }}
  - name: Persist Ecomap as Text
    id: td_ecomap_html_url
    task: persist_text
    partial:
      root_path: ${{ env.ECOSCOPE_WORKFLOWS_RESULTS }}
    mapvalues:
      argnames: text
      argvalues: ${{ workflow.td_ecomap.return }}
  - name: Create Time Density Map Widget
    id: td_map_widget
    task: create_map_widget_single_view
    map:
      argnames: [view, data]
      argvalues: ${{ workflow.td_ecomap_html_url.return }}
  - name: Merge Time Density Map Widget Views
    id: td_grouped_map_widget
    task: merge_widget_views
    partial:
      widgets: ${{ workflow.td_map_widget.return }}

  # dashboard
  - name: Create Dashboard with Subject Tracking Widgets
    id: subject_tracking_dashboard
    task: gather_dashboard
    partial:
      widgets:
        - ${{ workflow.traj_grouped_map_widget.return }}
        - ${{ workflow.mean_speed_grouped_sv_widget.return }}
        - ${{ workflow.max_speed_grouped_sv_widget.return }}
        - ${{ workflow.num_location_grouped_sv_widget.return }}
        - ${{ workflow.daynight_ratio_grouped_sv_widget.return }}
        - ${{ workflow.td_grouped_map_widget.return }}
      groupers: ${{ workflow.groupers.return }}
