{
  "title": "Params",
  "properties": {
    "groupers": {
      "additionalProperties": false,
      "properties": {
        "groupers": {
          "items": {
            "$ref": "#/$defs/Grouper"
          },
          "title": "Groupers",
          "type": "array",
          "description": "            Index(es) and/or column(s) to group by, along with\n            optional display names and help text.\n            "
        }
      },
      "required": [
        "groupers"
      ],
      "type": "object",
      "title": "Set Groupers"
    },
    "Fetch and preprocess patrol observations": {
      "type": "object",
      "description": "Fetch patrol observations from EarthRanger, preprocess them into trajectories, and add a temporal index.",
      "properties": {
        "patrol_obs": {
          "additionalProperties": false,
          "properties": {
            "client": {
              "description": "A named EarthRanger connection.",
              "title": "Client",
              "type": "string"
            },
            "since": {
              "title": "Since",
              "type": "string",
              "description": "Start date"
            },
            "until": {
              "title": "Until",
              "type": "string",
              "description": "End date"
            },
            "patrol_type": {
              "items": {
                "type": "string"
              },
              "title": "Patrol Type",
              "type": "array",
              "description": "list of UUID of patrol types"
            },
            "status": {
              "items": {
                "enum": [
                  "active",
                  "overdue",
                  "done",
                  "cancelled"
                ],
                "type": "string"
              },
              "title": "Status",
              "type": "array",
              "description": "list of 'scheduled'/'active'/'overdue'/'done'/'cancelled'"
            },
            "include_patrol_details": {
              "default": false,
              "title": "Include Patrol Details",
              "type": "boolean",
              "description": "Include patrol details"
            }
          },
          "required": [
            "client",
            "since",
            "until",
            "patrol_type",
            "status"
          ],
          "type": "object",
          "title": "Get Patrol Observations from EarthRanger"
        },
        "patrol_reloc": {
          "additionalProperties": false,
          "properties": {
            "filter_point_coords": {
              "items": {
                "$ref": "#/$defs/Coordinate"
              },
              "title": "Filter Point Coords",
              "type": "array"
            },
            "relocs_columns": {
              "items": {
                "type": "string"
              },
              "title": "Relocs Columns",
              "type": "array"
            }
          },
          "required": [
            "filter_point_coords",
            "relocs_columns"
          ],
          "type": "object",
          "title": "Transform Observations to Relocations"
        },
        "patrol_traj": {
          "additionalProperties": false,
          "properties": {
            "min_length_meters": {
              "default": 0.1,
              "title": "Min Length Meters",
              "type": "number"
            },
            "max_length_meters": {
              "default": 10000,
              "title": "Max Length Meters",
              "type": "number"
            },
            "max_time_secs": {
              "default": 3600,
              "title": "Max Time Secs",
              "type": "number"
            },
            "min_time_secs": {
              "default": 1,
              "title": "Min Time Secs",
              "type": "number"
            },
            "max_speed_kmhr": {
              "default": 120,
              "title": "Max Speed Kmhr",
              "type": "number"
            },
            "min_speed_kmhr": {
              "default": 0.0,
              "title": "Min Speed Kmhr",
              "type": "number"
            }
          },
          "required": [],
          "type": "object",
          "title": "Transform Relocations to Trajectories"
        },
        "traj_add_temporal_index": {
          "additionalProperties": false,
          "properties": {
            "index_name": {
              "title": "Index Name",
              "type": "string",
              "description": "A name for the new index which will be added."
            },
            "time_col": {
              "title": "Time Col",
              "type": "string",
              "description": "Name of existing column containing time data."
            },
            "directive": {
              "enum": [
                "%a",
                "%A",
                "%b",
                "%B",
                "%c",
                "%d",
                "%f",
                "%H",
                "%I",
                "%j",
                "%m",
                "%M",
                "%p",
                "%S",
                "%U",
                "%w",
                "%W",
                "%x",
                "%X",
                "%y",
                "%Y",
                "%z",
                "%%"
              ],
              "title": "Directive",
              "type": "string",
              "description": "A directive for formatting the time data."
            },
            "cast_to_datetime": {
              "default": true,
              "title": "Cast To Datetime",
              "type": "boolean",
              "description": "Whether to attempt casting `time_col` to datetime."
            },
            "format": {
              "default": "mixed",
              "title": "Format",
              "type": "string",
              "description": "            If `cast_to_datetime=True`, the format to pass to `pd.to_datetime`\n            when attempting to cast `time_col` to datetime. Defaults to \"mixed\".\n            "
            }
          },
          "required": [
            "index_name",
            "time_col",
            "directive"
          ],
          "type": "object",
          "title": "Add temporal index to Patrol Trajectories"
        }
      },
      "uiSchema": {
        "ui:order": [
          "patrol_obs",
          "patrol_reloc",
          "patrol_traj",
          "traj_add_temporal_index"
        ]
      }
    },
    "Patrol trajectories map layers": {
      "type": "object",
      "description": "Create map layers for each group of patrol trajectories.",
      "properties": {
        "split_patrol_traj_groups": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Split Patrol Trajectories by Group"
        },
        "patrol_traj_map_layers": {
          "additionalProperties": false,
          "properties": {
            "layer_style": {
              "anyOf": [
                {
                  "$ref": "#/$defs/PolylineLayerStyle"
                },
                {
                  "$ref": "#/$defs/PolygonLayerStyle"
                },
                {
                  "$ref": "#/$defs/PointLayerStyle"
                }
              ],
              "title": "Layer Style",
              "description": "Style arguments for the layer."
            },
            "legend": {
              "allOf": [
                {
                  "$ref": "#/$defs/LegendDefinition"
                }
              ],
              "default": null,
              "title": "Legend",
              "description": "If present, includes this layer in the map legend"
            }
          },
          "required": [
            "layer_style"
          ],
          "type": "object",
          "title": "Create map layer for each Patrol Trajectories group"
        }
      },
      "uiSchema": {
        "ui:order": [
          "split_patrol_traj_groups",
          "patrol_traj_map_layers"
        ]
      }
    },
    "Fetch and preprocess patrol events": {
      "type": "object",
      "description": "Fetch patrol events from EarthRanger, filter them, and add a temporal index.",
      "properties": {
        "patrol_events": {
          "additionalProperties": false,
          "properties": {
            "client": {
              "description": "A named EarthRanger connection.",
              "title": "Client",
              "type": "string"
            },
            "since": {
              "title": "Since",
              "type": "string",
              "description": "Start date"
            },
            "until": {
              "title": "Until",
              "type": "string",
              "description": "End date"
            },
            "patrol_type": {
              "items": {
                "type": "string"
              },
              "title": "Patrol Type",
              "type": "array",
              "description": "list of UUID of patrol types"
            },
            "status": {
              "items": {
                "type": "string"
              },
              "title": "Status",
              "type": "array",
              "description": "list of 'scheduled'/'active'/'overdue'/'done'/'cancelled'"
            }
          },
          "required": [
            "client",
            "since",
            "until",
            "patrol_type",
            "status"
          ],
          "type": "object",
          "title": "Get Patrol Events from EarthRanger"
        },
        "filter_patrol_events": {
          "additionalProperties": false,
          "properties": {
            "min_x": {
              "default": -180.0,
              "title": "Min X",
              "type": "number"
            },
            "max_x": {
              "default": 180.0,
              "title": "Max X",
              "type": "number"
            },
            "min_y": {
              "default": -90.0,
              "title": "Min Y",
              "type": "number"
            },
            "max_y": {
              "default": 90.0,
              "title": "Max Y",
              "type": "number"
            },
            "filter_point_coords": {
              "default": [
                {
                  "x": 0.0,
                  "y": 0.0
                }
              ],
              "items": {
                "$ref": "#/$defs/Coordinate"
              },
              "title": "Filter Point Coords",
              "type": "array"
            }
          },
          "required": [],
          "type": "object",
          "title": "Apply Relocation Coordinate Filter"
        },
        "pe_add_temporal_index": {
          "additionalProperties": false,
          "properties": {
            "index_name": {
              "title": "Index Name",
              "type": "string",
              "description": "A name for the new index which will be added."
            },
            "time_col": {
              "title": "Time Col",
              "type": "string",
              "description": "Name of existing column containing time data."
            },
            "directive": {
              "enum": [
                "%a",
                "%A",
                "%b",
                "%B",
                "%c",
                "%d",
                "%f",
                "%H",
                "%I",
                "%j",
                "%m",
                "%M",
                "%p",
                "%S",
                "%U",
                "%w",
                "%W",
                "%x",
                "%X",
                "%y",
                "%Y",
                "%z",
                "%%"
              ],
              "title": "Directive",
              "type": "string",
              "description": "A directive for formatting the time data."
            },
            "cast_to_datetime": {
              "default": true,
              "title": "Cast To Datetime",
              "type": "boolean",
              "description": "Whether to attempt casting `time_col` to datetime."
            },
            "format": {
              "default": "mixed",
              "title": "Format",
              "type": "string",
              "description": "            If `cast_to_datetime=True`, the format to pass to `pd.to_datetime`\n            when attempting to cast `time_col` to datetime. Defaults to \"mixed\".\n            "
            }
          },
          "required": [
            "index_name",
            "time_col",
            "directive"
          ],
          "type": "object",
          "title": "Add temporal index to Patrol Events"
        }
      },
      "uiSchema": {
        "ui:order": [
          "patrol_events",
          "filter_patrol_events",
          "pe_add_temporal_index"
        ]
      }
    },
    "Patrol events map layers": {
      "type": "object",
      "description": "Create map layers for each group of patrol events.",
      "properties": {
        "split_pe_groups": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Split Patrol Events by Group"
        },
        "patrol_events_map_layers": {
          "additionalProperties": false,
          "properties": {
            "layer_style": {
              "anyOf": [
                {
                  "$ref": "#/$defs/PolylineLayerStyle"
                },
                {
                  "$ref": "#/$defs/PolygonLayerStyle"
                },
                {
                  "$ref": "#/$defs/PointLayerStyle"
                }
              ],
              "title": "Layer Style",
              "description": "Style arguments for the layer."
            },
            "legend": {
              "allOf": [
                {
                  "$ref": "#/$defs/LegendDefinition"
                }
              ],
              "default": null,
              "title": "Legend",
              "description": "If present, includes this layer in the map legend"
            }
          },
          "required": [
            "layer_style"
          ],
          "type": "object",
          "title": "Create map layers for each Patrols Events group"
        }
      },
      "uiSchema": {
        "ui:order": [
          "split_pe_groups",
          "patrol_events_map_layers"
        ]
      }
    },
    "combined_traj_and_pe_map_layers": {
      "additionalProperties": false,
      "properties": {},
      "required": [],
      "type": "object",
      "title": "Combine Trajectories and Patrol Events layers"
    },
    "Combined Trajectories and Patrol Events EcoMap": {
      "type": "object",
      "description": "Draw EcoMaps for each combined Trajectory and Patrol Events group.",
      "properties": {
        "traj_patrol_events_ecomap": {
          "additionalProperties": false,
          "properties": {
            "tile_layer": {
              "default": "",
              "title": "Tile Layer",
              "type": "string",
              "description": "A named tile layer, ie OpenStreetMap."
            },
            "static": {
              "default": false,
              "title": "Static",
              "type": "boolean",
              "description": "Set to true to disable map pan/zoom."
            },
            "title": {
              "default": "",
              "title": "Title",
              "type": "string",
              "description": "The map title."
            },
            "north_arrow_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/NorthArrowStyle"
                }
              ],
              "default": {
                "placement": "top-left",
                "style": {
                  "transform": "scale(0.8)"
                }
              },
              "title": "North Arrow Style",
              "description": "Additional arguments for configuring the North Arrow."
            },
            "legend_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/LegendStyle"
                }
              ],
              "default": {
                "placement": "bottom-right"
              },
              "title": "Legend Style",
              "description": "Additional arguments for configuring the legend."
            }
          },
          "required": [],
          "type": "object",
          "title": "Draw Ecomaps for each combined Trajectory and Patrol Events group"
        },
        "traj_pe_ecomap_html_urls": {
          "additionalProperties": false,
          "properties": {
            "filename": {
              "default": null,
              "title": "Filename",
              "type": "string",
              "description": "            Optional filename to persist text to within the `root_path`.\n            If not provided, a filename will be generated based on a hash of the text content.\n            "
            }
          },
          "required": [],
          "type": "object",
          "title": "Persist Patrols Ecomap as Text"
        },
        "traj_pe_map_widgets_single_views": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Map Widgets for Patrol Events"
        },
        "traj_pe_grouped_map_widget": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge EcoMap Widget Views"
        }
      },
      "uiSchema": {
        "ui:order": [
          "traj_patrol_events_ecomap",
          "traj_pe_ecomap_html_urls",
          "traj_pe_map_widgets_single_views",
          "traj_pe_grouped_map_widget"
        ]
      }
    },
    "Total patrols per group": {
      "type": "object",
      "description": "Create a single value widget for the total patrols per group.",
      "properties": {
        "total_patrols": {
          "additionalProperties": false,
          "properties": {
            "column_name": {
              "title": "Column Name",
              "type": "string",
              "description": "Column to aggregate"
            }
          },
          "required": [
            "column_name"
          ],
          "type": "object",
          "title": "Calculate Total Patrols Per Group"
        },
        "total_patrols_sv_widgets": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            },
            "decimal_places": {
              "default": 1,
              "title": "Decimal Places",
              "type": "integer",
              "description": "The number of decimal places to display."
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Single Value Widgets for Total Patrols Per Group"
        },
        "total_patrols_grouped_sv_widget": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge per group Total Patrols SV widgets"
        }
      },
      "uiSchema": {
        "ui:order": [
          "total_patrols",
          "total_patrols_sv_widgets",
          "total_patrols_grouped_sv_widget"
        ]
      }
    },
    "Total patrol time per group": {
      "type": "object",
      "description": "Create a single value widget for the total patrol time per group.",
      "properties": {
        "total_patrol_time": {
          "additionalProperties": false,
          "properties": {
            "column_name": {
              "title": "Column Name",
              "type": "string",
              "description": "Column to aggregate"
            }
          },
          "required": [
            "column_name"
          ],
          "type": "object",
          "title": "Calculate Total Patrol Time Per Group"
        },
        "total_patrol_time_converted": {
          "additionalProperties": false,
          "properties": {
            "original_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "Original Unit",
              "description": "The original unit of measurement."
            },
            "new_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "New Unit",
              "description": "The unit to convert to."
            }
          },
          "required": [],
          "type": "object",
          "title": "Convert total patrol time units"
        },
        "total_patrol_time_sv_widgets": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            },
            "decimal_places": {
              "default": 1,
              "title": "Decimal Places",
              "type": "integer",
              "description": "The number of decimal places to display."
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Single Value Widgets for Total Patrol Time Per Group"
        },
        "patrol_time_grouped_widget": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge per group Total Patrol Time SV widgets"
        }
      },
      "uiSchema": {
        "ui:order": [
          "total_patrol_time",
          "total_patrol_time_converted",
          "total_patrol_time_sv_widgets",
          "patrol_time_grouped_widget"
        ]
      }
    },
    "Total distance per group": {
      "type": "object",
      "description": "Create a single value widget for the total distance per group.",
      "properties": {
        "total_patrol_dist": {
          "additionalProperties": false,
          "properties": {
            "column_name": {
              "title": "Column Name",
              "type": "string",
              "description": "Column to aggregate"
            }
          },
          "required": [
            "column_name"
          ],
          "type": "object",
          "title": "Calculate Total Distance Per Group"
        },
        "total_patrol_dist_converted": {
          "additionalProperties": false,
          "properties": {
            "original_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "Original Unit",
              "description": "The original unit of measurement."
            },
            "new_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "New Unit",
              "description": "The unit to convert to."
            }
          },
          "required": [],
          "type": "object",
          "title": "Convert total patrol distance units"
        },
        "total_patrol_dist_sv_widgets": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            },
            "decimal_places": {
              "default": 1,
              "title": "Decimal Places",
              "type": "integer",
              "description": "The number of decimal places to display."
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Single Value Widgets for Total Distance Per Group"
        },
        "patrol_dist_grouped_widget": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge per group Total Patrol Distance SV widgets"
        }
      },
      "uiSchema": {
        "ui:order": [
          "total_patrol_dist",
          "total_patrol_dist_converted",
          "total_patrol_dist_sv_widgets",
          "patrol_dist_grouped_widget"
        ]
      }
    },
    "Average speed per group": {
      "type": "object",
      "description": "Create a single value widget for the average speed per group.",
      "properties": {
        "avg_speed": {
          "additionalProperties": false,
          "properties": {
            "column_name": {
              "title": "Column Name",
              "type": "string",
              "description": "Column to aggregate"
            }
          },
          "required": [
            "column_name"
          ],
          "type": "object",
          "title": "Calculate Average Speed Per Group"
        },
        "average_speed_converted": {
          "additionalProperties": false,
          "properties": {
            "original_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "Original Unit",
              "description": "The original unit of measurement."
            },
            "new_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "New Unit",
              "description": "The unit to convert to."
            }
          },
          "required": [],
          "type": "object",
          "title": "Convert Average Speed units"
        },
        "avg_speed_sv_widgets": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            },
            "decimal_places": {
              "default": 1,
              "title": "Decimal Places",
              "type": "integer",
              "description": "The number of decimal places to display."
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Single Value Widgets for Avg Speed Per Group"
        },
        "avg_speed_grouped_widget": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge per group Avg Speed SV widgets"
        }
      },
      "uiSchema": {
        "ui:order": [
          "avg_speed",
          "average_speed_converted",
          "avg_speed_sv_widgets",
          "avg_speed_grouped_widget"
        ]
      }
    },
    "Max speed per group": {
      "type": "object",
      "description": "Create a single value widget for the max speed per group.",
      "properties": {
        "max_speed": {
          "additionalProperties": false,
          "properties": {
            "column_name": {
              "title": "Column Name",
              "type": "string",
              "description": "Column to aggregate"
            }
          },
          "required": [
            "column_name"
          ],
          "type": "object",
          "title": "Calculate Max Speed Per Group"
        },
        "max_speed_converted": {
          "additionalProperties": false,
          "properties": {
            "original_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "Original Unit",
              "description": "The original unit of measurement."
            },
            "new_unit": {
              "allOf": [
                {
                  "$ref": "#/$defs/Unit"
                }
              ],
              "default": null,
              "title": "New Unit",
              "description": "The unit to convert to."
            }
          },
          "required": [],
          "type": "object",
          "title": "Convert Max Speed units"
        },
        "max_speed_sv_widgets": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            },
            "decimal_places": {
              "default": 1,
              "title": "Decimal Places",
              "type": "integer",
              "description": "The number of decimal places to display."
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Single Value Widgets for Max Speed Per Group"
        },
        "max_speed_grouped_widget": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge per group Max Speed SV widgets"
        }
      },
      "uiSchema": {
        "ui:order": [
          "max_speed",
          "max_speed_converted",
          "max_speed_sv_widgets",
          "max_speed_grouped_widget"
        ]
      }
    },
    "Patrol events bar chart": {
      "type": "object",
      "description": "Create the patrol events bar chart.",
      "properties": {
        "patrol_events_bar_chart": {
          "additionalProperties": false,
          "properties": {
            "x_axis": {
              "title": "X Axis",
              "type": "string",
              "description": "The dataframe column to plot in the x/time axis."
            },
            "y_axis": {
              "title": "Y Axis",
              "type": "string",
              "description": "The dataframe column to plot in the y axis."
            },
            "category": {
              "title": "Category",
              "type": "string",
              "description": "The dataframe column to stack in the y axis."
            },
            "agg_function": {
              "enum": [
                "count",
                "mean",
                "sum",
                "min",
                "max"
              ],
              "title": "Agg Function",
              "type": "string",
              "description": "The aggregate function to apply to the group."
            },
            "time_interval": {
              "enum": [
                "year",
                "month",
                "week",
                "day",
                "hour"
              ],
              "title": "Time Interval",
              "type": "string",
              "description": "Sets the time interval of the x axis."
            },
            "color_column": {
              "default": null,
              "title": "Color Column",
              "type": "string",
              "description": "The name of the dataframe column to color bars with."
            },
            "grouped_styles": {
              "default": [],
              "items": {
                "$ref": "#/$defs/GroupedPlotStyle"
              },
              "title": "Grouped Styles",
              "type": "array",
              "description": "Style arguments passed to plotly.graph_objects.Bar and applied to individual groups."
            },
            "plot_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/PlotStyle"
                }
              ],
              "default": null,
              "title": "Plot Style",
              "description": "Additional style kwargs passed to go.Bar()."
            },
            "layout_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/BarLayoutStyle"
                }
              ],
              "default": null,
              "title": "Layout Style",
              "description": "Additional kwargs passed to plotly.go.Figure(layout)."
            }
          },
          "required": [
            "x_axis",
            "y_axis",
            "category",
            "agg_function",
            "time_interval"
          ],
          "type": "object",
          "title": "Draw Time Series Bar Chart for Patrols Events"
        },
        "patrol_events_bar_chart_html_url": {
          "additionalProperties": false,
          "properties": {
            "filename": {
              "default": null,
              "title": "Filename",
              "type": "string",
              "description": "            Optional filename to persist text to within the `root_path`.\n            If not provided, a filename will be generated based on a hash of the text content.\n            "
            }
          },
          "required": [],
          "type": "object",
          "title": "Persist Patrols Bar Chart as Text"
        },
        "patrol_events_bar_chart_widget": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Plot Widget for Patrol Events"
        }
      },
      "uiSchema": {
        "ui:order": [
          "patrol_events_bar_chart",
          "patrol_events_bar_chart_html_url",
          "patrol_events_bar_chart_widget"
        ]
      }
    },
    "Patrol events pie chart": {
      "type": "object",
      "description": "Create the patrol events pie chart.",
      "properties": {
        "patrol_events_pie_chart": {
          "additionalProperties": false,
          "properties": {
            "value_column": {
              "title": "Value Column",
              "type": "string",
              "description": "The name of the dataframe column to pull slice values from."
            },
            "label_column": {
              "default": null,
              "title": "Label Column",
              "type": "string",
              "description": "The name of the dataframe column to label slices with, required if the data in value_column is numeric."
            },
            "color_column": {
              "default": null,
              "title": "Color Column",
              "type": "string",
              "description": "The name of the dataframe column to color slices with."
            },
            "plot_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/PlotStyle"
                }
              ],
              "default": null,
              "title": "Plot Style",
              "description": "Additional style kwargs passed to go.Pie()."
            },
            "layout_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/LayoutStyle"
                }
              ],
              "default": null,
              "title": "Layout Style",
              "description": "Additional kwargs passed to plotly.go.Figure(layout)."
            }
          },
          "required": [
            "value_column"
          ],
          "type": "object",
          "title": "Draw Pie Chart for Patrols Events"
        },
        "pe_pie_chart_html_urls": {
          "additionalProperties": false,
          "properties": {
            "filename": {
              "default": null,
              "title": "Filename",
              "type": "string",
              "description": "            Optional filename to persist text to within the `root_path`.\n            If not provided, a filename will be generated based on a hash of the text content.\n            "
            }
          },
          "required": [],
          "type": "object",
          "title": "Persist Patrols Pie Chart as Text"
        },
        "patrol_events_pie_chart_widgets": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Plot Widget for Patrol Events"
        },
        "patrol_events_pie_widget_grouped": {
          "additionalProperties": false,
          "properties": {},
          "required": [],
          "type": "object",
          "title": "Merge Pie Chart Widget Views"
        }
      },
      "uiSchema": {
        "ui:order": [
          "patrol_events_pie_chart",
          "pe_pie_chart_html_urls",
          "patrol_events_pie_chart_widgets",
          "patrol_events_pie_widget_grouped"
        ]
      }
    },
    "Time Density Map": {
      "type": "object",
      "description": "Calculate time density from patrol trajectories and display it on a map.",
      "properties": {
        "td": {
          "additionalProperties": false,
          "properties": {
            "pixel_size": {
              "default": 250.0,
              "title": "Pixel Size",
              "type": "number",
              "description": "Pixel size for raster profile."
            },
            "crs": {
              "default": "ESRI:102022",
              "title": "Crs",
              "type": "string"
            },
            "nodata_value": {
              "default": "nan",
              "title": "Nodata Value",
              "type": "number"
            },
            "band_count": {
              "default": 1,
              "title": "Band Count",
              "type": "integer"
            },
            "max_speed_factor": {
              "default": 1.05,
              "title": "Max Speed Factor",
              "type": "number"
            },
            "expansion_factor": {
              "default": 1.3,
              "title": "Expansion Factor",
              "type": "number"
            },
            "percentiles": {
              "default": [
                50.0,
                60.0,
                70.0,
                80.0,
                90.0,
                95.0
              ],
              "items": {
                "type": "number"
              },
              "title": "Percentiles",
              "type": "array"
            }
          },
          "required": [],
          "type": "object",
          "title": "Calculate Time Density from Trajectory"
        },
        "td_map_layer": {
          "additionalProperties": false,
          "properties": {
            "layer_style": {
              "anyOf": [
                {
                  "$ref": "#/$defs/PolylineLayerStyle"
                },
                {
                  "$ref": "#/$defs/PolygonLayerStyle"
                },
                {
                  "$ref": "#/$defs/PointLayerStyle"
                }
              ],
              "title": "Layer Style",
              "description": "Style arguments for the layer."
            },
            "legend": {
              "allOf": [
                {
                  "$ref": "#/$defs/LegendDefinition"
                }
              ],
              "default": null,
              "title": "Legend",
              "description": "If present, includes this layer in the map legend"
            }
          },
          "required": [
            "layer_style"
          ],
          "type": "object",
          "title": "Create map layer from Time Density"
        },
        "td_ecomap": {
          "additionalProperties": false,
          "properties": {
            "tile_layer": {
              "default": "",
              "title": "Tile Layer",
              "type": "string",
              "description": "A named tile layer, ie OpenStreetMap."
            },
            "static": {
              "default": false,
              "title": "Static",
              "type": "boolean",
              "description": "Set to true to disable map pan/zoom."
            },
            "title": {
              "default": "",
              "title": "Title",
              "type": "string",
              "description": "The map title."
            },
            "north_arrow_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/NorthArrowStyle"
                }
              ],
              "default": {
                "placement": "top-left",
                "style": {
                  "transform": "scale(0.8)"
                }
              },
              "title": "North Arrow Style",
              "description": "Additional arguments for configuring the North Arrow."
            },
            "legend_style": {
              "allOf": [
                {
                  "$ref": "#/$defs/LegendStyle"
                }
              ],
              "default": {
                "placement": "bottom-right"
              },
              "title": "Legend Style",
              "description": "Additional arguments for configuring the legend."
            }
          },
          "required": [],
          "type": "object",
          "title": "Draw Ecomap from Time Density"
        },
        "td_ecomap_html_url": {
          "additionalProperties": false,
          "properties": {
            "filename": {
              "default": null,
              "title": "Filename",
              "type": "string",
              "description": "            Optional filename to persist text to within the `root_path`.\n            If not provided, a filename will be generated based on a hash of the text content.\n            "
            }
          },
          "required": [],
          "type": "object",
          "title": "Persist Ecomap as Text"
        },
        "td_map_widget": {
          "additionalProperties": false,
          "properties": {
            "title": {
              "title": "Title",
              "type": "string",
              "description": "The title of the widget"
            }
          },
          "required": [
            "title"
          ],
          "type": "object",
          "title": "Create Time Density Map Widget"
        }
      },
      "uiSchema": {
        "ui:order": [
          "td",
          "td_map_layer",
          "td_ecomap",
          "td_ecomap_html_url",
          "td_map_widget"
        ]
      }
    },
    "patrol_dashboard": {
      "additionalProperties": false,
      "properties": {
        "title": {
          "title": "Title",
          "type": "string",
          "description": "The title of the dashboard"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "description": "The description of the dashboard"
        }
      },
      "required": [
        "title",
        "description"
      ],
      "type": "object",
      "title": "Create Dashboard with Patrol Map Widgets"
    }
  },
  "$defs": {
    "Grouper": {
      "properties": {
        "index_name": {
          "title": "Index Name",
          "type": "string"
        },
        "display_name": {
          "default": null,
          "title": "Display Name",
          "type": "string"
        },
        "help_text": {
          "default": null,
          "title": "Help Text",
          "type": "string"
        }
      },
      "required": [
        "index_name"
      ],
      "title": "Grouper",
      "type": "object"
    },
    "Coordinate": {
      "properties": {
        "x": {
          "title": "X",
          "type": "number"
        },
        "y": {
          "title": "Y",
          "type": "number"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "title": "Coordinate",
      "type": "object"
    },
    "LegendDefinition": {
      "properties": {
        "label_column": {
          "title": "Label Column",
          "type": "string"
        },
        "color_column": {
          "title": "Color Column",
          "type": "string"
        }
      },
      "required": [
        "label_column",
        "color_column"
      ],
      "title": "LegendDefinition",
      "type": "object"
    },
    "PointLayerStyle": {
      "properties": {
        "auto_highlight": {
          "default": false,
          "title": "Auto Highlight",
          "type": "boolean"
        },
        "opacity": {
          "default": 1,
          "title": "Opacity",
          "type": "number"
        },
        "pickable": {
          "default": true,
          "title": "Pickable",
          "type": "boolean"
        },
        "filled": {
          "default": true,
          "title": "Filled",
          "type": "boolean"
        },
        "get_fill_color": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "items": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Get Fill Color"
        },
        "get_line_color": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "items": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Get Line Color"
        },
        "get_line_width": {
          "default": 1,
          "title": "Get Line Width",
          "type": "number"
        },
        "fill_color_column": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fill Color Column"
        },
        "line_width_units": {
          "default": "pixels",
          "enum": [
            "meters",
            "pixels"
          ],
          "title": "Line Width Units",
          "type": "string"
        },
        "layer_type": {
          "const": "point",
          "default": "point",
          "enum": [
            "point"
          ],
          "title": "Layer Type",
          "type": "string"
        },
        "get_radius": {
          "default": 1,
          "title": "Get Radius",
          "type": "number"
        },
        "radius_units": {
          "default": "pixels",
          "enum": [
            "meters",
            "pixels"
          ],
          "title": "Radius Units",
          "type": "string"
        }
      },
      "title": "PointLayerStyle",
      "type": "object"
    },
    "PolygonLayerStyle": {
      "properties": {
        "auto_highlight": {
          "default": false,
          "title": "Auto Highlight",
          "type": "boolean"
        },
        "opacity": {
          "default": 1,
          "title": "Opacity",
          "type": "number"
        },
        "pickable": {
          "default": true,
          "title": "Pickable",
          "type": "boolean"
        },
        "filled": {
          "default": true,
          "title": "Filled",
          "type": "boolean"
        },
        "get_fill_color": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "items": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Get Fill Color"
        },
        "get_line_color": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "items": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Get Line Color"
        },
        "get_line_width": {
          "default": 1,
          "title": "Get Line Width",
          "type": "number"
        },
        "fill_color_column": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Fill Color Column"
        },
        "line_width_units": {
          "default": "pixels",
          "enum": [
            "meters",
            "pixels"
          ],
          "title": "Line Width Units",
          "type": "string"
        },
        "layer_type": {
          "const": "polygon",
          "default": "polygon",
          "enum": [
            "polygon"
          ],
          "title": "Layer Type",
          "type": "string"
        },
        "extruded": {
          "default": false,
          "title": "Extruded",
          "type": "boolean"
        },
        "get_elevation": {
          "default": 1000,
          "title": "Get Elevation",
          "type": "number"
        }
      },
      "title": "PolygonLayerStyle",
      "type": "object"
    },
    "PolylineLayerStyle": {
      "properties": {
        "auto_highlight": {
          "default": false,
          "title": "Auto Highlight",
          "type": "boolean"
        },
        "opacity": {
          "default": 1,
          "title": "Opacity",
          "type": "number"
        },
        "pickable": {
          "default": true,
          "title": "Pickable",
          "type": "boolean"
        },
        "layer_type": {
          "const": "polyline",
          "default": "polyline",
          "enum": [
            "polyline"
          ],
          "title": "Layer Type",
          "type": "string"
        },
        "get_color": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "items": {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Get Color"
        },
        "get_width": {
          "default": 1,
          "title": "Get Width",
          "type": "number"
        },
        "color_column": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Color Column"
        },
        "width_units": {
          "default": "pixels",
          "enum": [
            "meters",
            "pixels"
          ],
          "title": "Width Units",
          "type": "string"
        },
        "cap_rounded": {
          "default": true,
          "title": "Cap Rounded",
          "type": "boolean"
        }
      },
      "title": "PolylineLayerStyle",
      "type": "object"
    },
    "LayerDefinition": {
      "properties": {
        "geodataframe": {
          "title": "Geodataframe",
          "type": "ecoscope_workflows.annotations.DataFrame"
        },
        "layer_style": {
          "discriminator": {
            "mapping": {
              "point": "#/$defs/PointLayerStyle",
              "polygon": "#/$defs/PolygonLayerStyle",
              "polyline": "#/$defs/PolylineLayerStyle"
            },
            "propertyName": "layer_type"
          },
          "oneOf": [
            {
              "$ref": "#/$defs/PolylineLayerStyle"
            },
            {
              "$ref": "#/$defs/PointLayerStyle"
            },
            {
              "$ref": "#/$defs/PolygonLayerStyle"
            }
          ],
          "title": "Layer Style"
        },
        "legend": {
          "$ref": "#/$defs/LegendDefinition"
        }
      },
      "required": [
        "geodataframe",
        "layer_style",
        "legend"
      ],
      "title": "LayerDefinition",
      "type": "object"
    },
    "LegendStyle": {
      "properties": {
        "placement": {
          "default": "bottom-right",
          "enum": [
            "top-left",
            "top-right",
            "bottom-left",
            "bottom-right",
            "fill"
          ],
          "title": "Placement",
          "type": "string"
        }
      },
      "title": "LegendStyle",
      "type": "object"
    },
    "NorthArrowStyle": {
      "properties": {
        "placement": {
          "default": "top-left",
          "enum": [
            "top-left",
            "top-right",
            "bottom-left",
            "bottom-right",
            "fill"
          ],
          "title": "Placement",
          "type": "string"
        },
        "style": {
          "default": {
            "transform": "scale(0.8)"
          },
          "title": "Style",
          "type": "object"
        }
      },
      "title": "NorthArrowStyle",
      "type": "object"
    },
    "WidgetSingleView": {
      "properties": {
        "widget_type": {
          "enum": [
            "graph",
            "map",
            "text",
            "stat"
          ],
          "title": "Widget Type",
          "type": "string"
        },
        "title": {
          "title": "Title",
          "type": "string"
        },
        "data": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "string"
            }
          ],
          "title": "Data"
        },
        "view": {
          "anyOf": [
            {
              "items": {
                "maxItems": 3,
                "minItems": 3,
                "prefixItems": [
                  {
                    "type": "string"
                  },
                  {
                    "const": "=",
                    "enum": [
                      "="
                    ],
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "type": "array"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "View"
        }
      },
      "required": [
        "widget_type",
        "title",
        "data"
      ],
      "title": "WidgetSingleView",
      "type": "object"
    },
    "Quantity": {
      "properties": {
        "value": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "number"
            }
          ],
          "title": "Value"
        },
        "unit": {
          "anyOf": [
            {
              "$ref": "#/$defs/Unit"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "required": [
        "value"
      ],
      "title": "Quantity",
      "type": "object"
    },
    "Unit": {
      "enum": [
        "m",
        "km",
        "s",
        "h",
        "d",
        "m/s",
        "km/h"
      ],
      "title": "Unit",
      "type": "string"
    },
    "BarLayoutStyle": {
      "properties": {
        "font_color": {
          "default": null,
          "title": "Font Color",
          "type": "string"
        },
        "font_style": {
          "default": null,
          "title": "Font Style",
          "type": "string"
        },
        "plot_bgcolor": {
          "default": null,
          "title": "Plot Bgcolor",
          "type": "string"
        },
        "showlegend": {
          "default": null,
          "title": "Showlegend",
          "type": "boolean"
        },
        "bargap": {
          "default": null,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Bargap",
          "type": "number"
        },
        "bargroupgap": {
          "default": null,
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Bargroupgap",
          "type": "number"
        }
      },
      "title": "BarLayoutStyle",
      "type": "object"
    },
    "GroupedPlotStyle": {
      "properties": {
        "category": {
          "title": "Category",
          "type": "string"
        },
        "plot_style": {
          "$ref": "#/$defs/PlotCategoryStyle"
        }
      },
      "required": [
        "category",
        "plot_style"
      ],
      "title": "GroupedPlotStyle",
      "type": "object"
    },
    "LineStyle": {
      "properties": {
        "color": {
          "default": null,
          "title": "Color",
          "type": "string"
        }
      },
      "title": "LineStyle",
      "type": "object"
    },
    "PlotCategoryStyle": {
      "properties": {
        "marker_color": {
          "default": null,
          "title": "Marker Color",
          "type": "string"
        }
      },
      "title": "PlotCategoryStyle",
      "type": "object"
    },
    "PlotStyle": {
      "properties": {
        "xperiodalignment": {
          "default": null,
          "title": "Xperiodalignment",
          "type": "string"
        },
        "marker_colors": {
          "default": null,
          "items": {
            "type": "string"
          },
          "title": "Marker Colors",
          "type": "array"
        },
        "textinfo": {
          "default": null,
          "title": "Textinfo",
          "type": "string"
        },
        "line": {
          "allOf": [
            {
              "$ref": "#/$defs/LineStyle"
            }
          ],
          "default": null,
          "title": "Line"
        }
      },
      "title": "PlotStyle",
      "type": "object"
    },
    "LayoutStyle": {
      "properties": {
        "font_color": {
          "default": null,
          "title": "Font Color",
          "type": "string"
        },
        "font_style": {
          "default": null,
          "title": "Font Style",
          "type": "string"
        },
        "plot_bgcolor": {
          "default": null,
          "title": "Plot Bgcolor",
          "type": "string"
        },
        "showlegend": {
          "default": null,
          "title": "Showlegend",
          "type": "boolean"
        }
      },
      "title": "LayoutStyle",
      "type": "object"
    },
    "GroupedWidget": {
      "properties": {
        "widget_type": {
          "enum": [
            "graph",
            "map",
            "text",
            "stat"
          ],
          "title": "Widget Type",
          "type": "string"
        },
        "title": {
          "title": "Title",
          "type": "string"
        },
        "views": {
          "additionalProperties": {
            "anyOf": [
              {
                "format": "path",
                "type": "string"
              },
              {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Views",
          "type": "object"
        }
      },
      "required": [
        "widget_type",
        "title",
        "views"
      ],
      "title": "GroupedWidget",
      "type": "object"
    }
  },
  "uiSchema": {
    "ui:order": [
      "groupers",
      "Fetch and preprocess patrol observations",
      "Patrol trajectories map layers",
      "Fetch and preprocess patrol events",
      "Patrol events map layers",
      "combined_traj_and_pe_map_layers",
      "Combined Trajectories and Patrol Events EcoMap",
      "Total patrols per group",
      "Total patrol time per group",
      "Total distance per group",
      "Average speed per group",
      "Max speed per group",
      "Patrol events bar chart",
      "Patrol events pie chart",
      "Time Density Map",
      "patrol_dashboard"
    ]
  }
}
