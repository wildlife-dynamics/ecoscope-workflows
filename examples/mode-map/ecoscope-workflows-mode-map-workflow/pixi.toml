[project]
name = "ecoscope-workflows-mode-map-workflow"
channels = [
    "file:///tmp/ecoscope-workflows/release/artifacts/",
    "https://repo.prefix.dev/ecoscope-workflows/",
    "conda-forge",
]
platforms = [
    "linux-64",
    "linux-aarch64",
    "osx-arm64",
]

[dependencies.ecoscope-workflows-core]
version = "*"
channel = "file:///tmp/ecoscope-workflows/release/artifacts/"

[dependencies.ecoscope-workflows-ext-ecoscope]
version = "*"
channel = "file:///tmp/ecoscope-workflows/release/artifacts/"

[feature.test.dependencies.pytest]
version = "*"

[feature.test.tasks]
test-async-mock-io = "python -m pytest tests -k 'async and mock-io'"
test-sequential-mock-io = "python -m pytest tests -k 'sequential and mock-io'"

[environments.default]
features = []
solve-group = "default"

[environments.test]
features = [
    "test",
]
solve-group = "default"

[feature.app.dependencies.fastapi]
version = "*"

[feature.app.dependencies.httpx]
version = "*"

[feature.app.dependencies.gunicorn]
version = "*"

[environments.app]
features = [
    "app",
]
solve-group = "app"
no-default-feature = true

[pypi-dependencies.ecoscope-workflows-mode-map-workflow]
path = "."
editable = true

[tasks]
docker-build = '''
mkdir -p .tmp/ecoscope-workflows/release/artifacts/
&& cp -r /tmp/ecoscope-workflows/release/artifacts/* .tmp/ecoscope-workflows/release/artifacts/
&& docker buildx build -t ecoscope-workflows-mode-map-workflow .
'''
