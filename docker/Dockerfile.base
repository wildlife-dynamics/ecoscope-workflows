ARG ONLY_DEPS_IMAGE_TAG=ghcr.io/wildlife-dynamics/ecoscope-workflows-only-deps:latest

FROM $ONLY_DEPS_IMAGE_TAG AS build

ARG VERSION="0.0.0"
COPY . /opt/ecoscope-workflows

USER root
RUN SETUPTOOLS_SCM_PRETEND_VERSION=$VERSION \
    /env/bin/pip install /opt/ecoscope-workflows \
    --target /env/lib/python3.12/site-packages \
    --no-deps \
    --no-build-isolation
USER $MAMBA_USER

FROM build AS clean

COPY --from=build /env /env

USER root
RUN rm -rf /env/conda-meta

RUN export BIN=/env/bin \
    && rm -rf $BIN/h4* \
    && rm -rf $BIN/h5* \
    && rm -rf $BIN/hdf* \
    && rm -rf $BIN/ipython* \
    && rm -rf $BIN/openssl \
    && rm -rf $BIN/pdf* \
    && rm -rf $BIN/pip* \
    && rm -rf $BIN/sqlite3 \
    && rm -rf $BIN/wheel

RUN export SHARE=/env/share \
    && rm -rf $SHARE/bash-completion \
    && rm -rf $SHARE/cmake \
    && rm -rf $SHARE/doc \
    && rm -rf $SHARE/examples \
    && rm -rf $SHARE/hdf5_examples \
    && rm -rf $SHARE/jupyter \
    && rm -rf $SHARE/man \
    && rm -rf $SHARE/pg_* \
    && rm -rf $SHARE/postgres* \
    && rm -rf $SHARE/psql* \
    && rm -rf $SHARE/terminfo

RUN export SITEPKGS=/env/lib/python3.12/site-packages \
    && rm -rf $SITEPKGS/numba/tests \
    && rm -rf $SITEPKGS/pip* \
    && rm -rf $SITEPKGS/setuptools* \
    && rm -rf $SITEPKGS/wheel* \
    && rm -rf $SITEPKGS/xarray*

USER $MAMBA_USER

# stage 3: create a testable runtime image
# this is testable because we haven't removed pytest yet
FROM bitnami/minideb:bullseye AS testable_runtime

COPY --from=clean /env /env

# todo: remove pytest before serving
