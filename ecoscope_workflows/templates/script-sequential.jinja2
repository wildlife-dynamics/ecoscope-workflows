{% import 'script-sequential-macros.jinja' as macros %}

{%- if testing %}
"""WARNING: This file is generated in a testing context and should not be used in production.
Lines specific to the testing context are marked with a test tube emoji (ðŸ§ª) to indicate
that they would not be included (or would be different) in the production version of this file.
"""
{% endif -%}

import argparse
import os
{% if spec.requires_map_exra_imports -%}
from functools import partial
{% endif -%}
import yaml
{%- if testing %}
import warnings  # ðŸ§ª
from ecoscope_workflows.testing import create_distributed_task_magicmock  # ðŸ§ª
{% endif %}

{% for t in spec.workflow -%}
{{ t.known_task.importable_reference.statement }}
{% if loop.last %}
{% endif -%}
{% endfor -%}
if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    g = parser.add_argument_group("{{ spec.name }}")
    g.add_argument(
        "--config-file",
        dest="config_file",
        required=True,
        type=argparse.FileType(mode="r"),
    )
    args = parser.parse_args()
    params = yaml.safe_load(args.config_file)
    {%- if testing %}
    warnings.warn("This test script should not be used in production!")  # ðŸ§ª
    {% endif %}
    # FIXME: first pass assumes tasks are already in topological order
    {% for t in spec.workflow %}
    {{ macros.handle_task(t, params) }}
    {% if loop.last %}
    print({{ t.id }})
    {% endif %}
    {% endfor -%}
