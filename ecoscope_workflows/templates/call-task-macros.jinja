{%- macro create_call_method_callable(t, validate, params) %}
{{ t.known_task.importable_reference.function }}
{% if validate %}
.validate()
{% endif %}
{% if t.partial %}
.partial({% for arg in t.partial %}{{ arg }}={{ t.partial[arg] }},{% endfor %} **{{ params }})
{% else %}
.partial(**{{ params }})
{% endif %}
.call
{% endmacro -%}


{% macro handle_call_method(t, validate, params, indent) %}
{{ indent }}{{ t.id }} = (
{{ indent }}{{ indent }}{{ create_call_method_callable(t, validate, params) }}()
    )

{% endmacro %}


{% macro create_parallel_method_callable(t, validate, params) %}
{{ t.known_task.importable_reference.function }}
{% if validate %}
.validate()
{% endif %}
{% if t.partial %}
.partial({% for arg in t.partial %}{{ arg }}={{ t.partial[arg] }},{% endfor %} **{{ params }})
{% else %}
.partial(**{{ params }})
{% endif %}
.{{ t.method }}
{% endmacro %}



{% macro handle_parallel_method(t, validate, params, indent, argnames, argvalues) %}
{{ indent }}{{ t.id }} = (
        {{ create_parallel_method_callable(t, validate, params) }}(argnames={{ argnames }}, argvalues={{ argvalues }})
    )
{% endmacro %}


{% macro handle_task(t, validate, params, indent) %}
{% if t.method == "call" %}
    {{ handle_call_method(t, validate, params, indent) }}
{% else %}
    {% if t.method == "map" %}
        {% set argnames = t.map.argnames %}
        {% set argvalues = t.map.argvalues %}
    {% elif t.method == "mapvalues" %}
        {% set argnames = t.mapvalues.argnames %}
        {% set argvalues = t.mapvalues.argvalues %}
    {% endif %}
    {{ handle_parallel_method(t, validate, params, indent, argnames, argvalues) }}
{% endif %}
{% endmacro %}
